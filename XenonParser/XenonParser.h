#pragma once

#include <Types.h>

#ifdef INDLL
#define DLLPREFIX __declspec(dllexport)
#else
#define DLLPREFIX __declspec(dllimport)
#endif

enum Mnemonics
{
	/* This OpCode was unused on the Xenon. We can use it to jump to HLE functions */
	PPC_OP_HLE_CALL = 1,

	PPC_OP_TDI = 2, PPC_OP_TWI = 3, PPC_OP_MULLI = 7,
	PPC_OP_SUBFIC = 8, PPC_OP_CMPLI = 10, PPC_OP_CMPI = 11, PPC_OP_ADDIC = 12, PPC_OP_ADDIC_UP = 13, PPC_OP_ADDI = 14, PPC_OP_ADDIS = 15,
	PPC_OP_BC = 16, PPC_OP_SC = 17, PPC_OP_B = 18, PPC_OP_RLWIMI = 20, PPC_OP_RLWINM = 21, PPC_OP_RLWNM = 23, PPC_OP_ORI = 24,
	PPC_OP_ORIS = 25, PPC_OP_XORI = 26, PPC_OP_XORIS = 27, PPC_OP_ANDI_UP = 28, PPC_OP_ANDIS_UP = 29, PPC_OP_LWZ = 32, PPC_OP_LWZU = 33,
	PPC_OP_LBZ = 34, PPC_OP_LBZU = 35, PPC_OP_STW = 36, PPC_OP_STWU = 37, PPC_OP_STB = 38, PPC_OP_STBU = 39,
	PPC_OP_LHZ = 40, PPC_OP_LHZU = 41, PPC_OP_LHA = 42, PPC_OP_LHAU = 43, PPC_OP_STH = 44, PPC_OP_STHU = 45, PPC_OP_LMW = 46, PPC_OP_STMW = 47,
	PPC_OP_LFS = 48, PPC_OP_LFSU = 49, PPC_OP_LFD = 50, PPC_OP_LFDU = 51, PPC_OP_STFS = 52, PPC_OP_STFSU = 53, PPC_OP_STFD = 54, PPC_OP_STFDU = 55,

	/* Opcode 19 sub operations */
	PPC_OP_BCCTR = 0x21013,
	PPC_OP_BCLR = 0x01013,
	PPC_OP_CRAND = 0x10113,
	PPC_OP_CRANDC = 0x08113,
	PPC_OP_CREQV = 0x12113,
	PPC_OP_CRNAND = 0x0E113,
	PPC_OP_CRNOR = 0x02113,
	PPC_OP_CROR = 0x1C113,
	PPC_OP_CRORC = 0x1A113,
	PPC_OP_CRXOR = 0x0C113,
	PPC_OP_ISYNC = 0x09613,
	PPC_OP_MCRF = 0x00013,
	PPC_OP_RFID = 0x01213,

	/* Opcode 30 sub operations */
	PPC_OP_RLDCL = 0x0081E,
	PPC_OP_RLDCR = 0x0091E,
	PPC_OP_RLDIC = 0x0021E,
	PPC_OP_RLDICL = 0x0001E,
	PPC_OP_RLDICR = 0x0011E,
	PPC_OP_RLDIMI = 0x0031E,

	/* Opcode 31 sub operations */
	PPC_OP_ADD = 0x10A1F,
	PPC_OP_ADDO = 0x30A1F,
	PPC_OP_ADDC = 0x00A1F,
	PPC_OP_ADDCO = 0x20A1F,
	PPC_OP_ADDE = 0x08A1F,
	PPC_OP_ADDEO = 0x28A1F,
	PPC_OP_ADDME = 0x0EA1F,
	PPC_OP_ADDMEO = 0x2EA1F,
	PPC_OP_ADDZE = 0x0CA1F,
	PPC_OP_ADDZEO = 0x2CA1F,
	PPC_OP_AND = 0x01C1F,
	PPC_OP_ANDC = 0x03C1F,
	PPC_OP_CMP = 0x0001F,
	PPC_OP_CMPL = 0x0201F,
	PPC_OP_CNTLZD = 0x03A1F,
	PPC_OP_CNTLZW = 0x01A1F,
	PPC_OP_DCBF = 0x0561F,
	PPC_OP_DCBST = 0x0361F,
	PPC_OP_DCBT = 0x1161F,
	PPC_OP_DCBTST = 0x0F61F,
	PPC_OP_DCBZ = 0x3F61F,
	PPC_OP_DIVD = 0x1E91F,
	PPC_OP_DIVDO = 0x3E91F,
	PPC_OP_DIVDU = 0x1C91F,
	PPC_OP_DIVDUO = 0x3C91F,
	PPC_OP_DIVW = 0x1EB1F,
	PPC_OP_DIVWO = 0x3EB1F,
	PPC_OP_DIVWU = 0x1CB1F,
	PPC_OP_DIVWUO = 0x3CB1F,
	PPC_OP_ECIWX = 0x1361F,
	PPC_OP_ECOWX = 0x1B61F,
	PPC_OP_EIEIO = 0x3561F,
	PPC_OP_EQV = 0x11C1F,
	PPC_OP_EXTSB = 0x3BA1F,
	PPC_OP_EXTSH = 0x39A1F,
	PPC_OP_EXTSW = 0x3DA1F,
	PPC_OP_ICBI = 0x3D61F,
	PPC_OP_LBZUX = 0x0771F,
	PPC_OP_LBZX = 0x0571F,
	PPC_OP_LDARX = 0x0541F,
	PPC_OP_LDUX = 0x0351F,
	PPC_OP_LDX = 0x0151F,
	PPC_OP_LFDUX = 0x2771F,
	PPC_OP_LFDX = 0x2571F,
	PPC_OP_LFSUX = 0x2371F,
	PPC_OP_LFSX = 0x2171F,
	PPC_OP_LHAUX = 0x1771F,
	PPC_OP_LHAX = 0x1571F,
	PPC_OP_LHBRX = 0x3161F,
	PPC_OP_LHZUX = 0x1371F,
	PPC_OP_LHZX = 0x1171F,
	PPC_OP_LSWI = 0x2551F,
	PPC_OP_LSWX = 0x2151F,
	PPC_OP_LWARX = 0x0141F,
	PPC_OP_LWAUX = 0x1751F,
	PPC_OP_LWAX = 0x1551F,
	PPC_OP_LWBRX = 0x2161F,
	PPC_OP_LWZUX = 0x0371F,
	PPC_OP_LWZX = 0x0171F,
	PPC_OP_MFCR = 0x0131F,
	PPC_OP_MFMSR = 0x0531F,
	PPC_OP_MFSPR = 0x1531F,
	PPC_OP_MFSR = 0x2531F,
	PPC_OP_MFSRIN = 0x2931F,
	PPC_OP_MFTB = 0x1731F,
	PPC_OP_MTCRF = 0x0901F,
	PPC_OP_MTMSR = 0x0921F,
	PPC_OP_MTMSRD = 0x0B21F,
	PPC_OP_MTSPR = 0x1D31F,
	PPC_OP_MTSR = 0x0D21F,
	PPC_OP_MTSRIN = 0x0F21F,
	PPC_OP_MULHD = 0x0491F,
	PPC_OP_MULHDU = 0x0091F,
	PPC_OP_MULHW = 0x04B1F,
	PPC_OP_MULHWU = 0x00B1F,
	PPC_OP_MULLD = 0x0E91F,
	PPC_OP_MULLDO = 0x2E91F,
	PPC_OP_MULLW = 0x0EB1F,
	PPC_OP_MULLWO = 0x2EB1F,
	PPC_OP_NAND = 0x1DC1F,
	PPC_OP_NEG = 0x0681F,
	PPC_OP_NEGO = 0x2681F,
	PPC_OP_NOR = 0x07C1F,
	PPC_OP_OR = 0x1BC1F,
	PPC_OP_ORC = 0x19C1F,
	PPC_OP_SLBIA = 0x1F21F,
	PPC_OP_SLBIE = 0x1B21F,
	PPC_OP_SLBMFEE = 0x3931F,
	PPC_OP_SLBMFEV = 0x3531F,
	PPC_OP_SLBMTE = 0x1921F,
	PPC_OP_SLD = 0x01B1F,
	PPC_OP_SLW = 0x0181F,
	PPC_OP_SRAD = 0x31A1F,
	PPC_OP_SRADI = 0x33A1F,
	PPC_OP_SRADI1 = 0x33B1F,
	PPC_OP_SRAW = 0x3181F,
	PPC_OP_SRAWI = 0x3381F,
	PPC_OP_SRD = 0x21B1F,
	PPC_OP_SRW = 0x2181F,
	PPC_OP_STBUX = 0x0F71F,
	PPC_OP_STBX = 0x0D71F,
	PPC_OP_STDCX_UP = 0x0D61F,
	PPC_OP_STDUX = 0x0B51F,
	PPC_OP_STDX = 0x0951F,
	PPC_OP_STFDUX = 0x2F71F,
	PPC_OP_STFDX = 0x2D71F,
	PPC_OP_STFIWX = 0x3D71F,
	PPC_OP_STFSUX = 0x2B71F,
	PPC_OP_STFSX = 0x2971F,
	PPC_OP_STHBRX = 0x3961F,
	PPC_OP_STHUX = 0x1B71F,
	PPC_OP_STHX = 0x1971F,
	PPC_OP_STSWI = 0x2D51F,
	PPC_OP_STSWX = 0x2951F,
	PPC_OP_STWBRX = 0x2961F,
	PPC_OP_STWCX_UP = 0x091F,
	PPC_OP_STWUX = 0x0B71F,
	PPC_OP_STWX = 0x0971F,
	PPC_OP_SUBF = 0x0281F,
	PPC_OP_SUBFO = 0x2281F,
	PPC_OP_SUBFC = 0x0081F,
	PPC_OP_SUBFCO = 0x2081F,
	PPC_OP_SUBFE = 0x0881F,
	PPC_OP_SUBFEO = 0x2881F,
	PPC_OP_SUBFME = 0x0E81F,
	PPC_OP_SUBFMEO = 0x2E81F,
	PPC_OP_SUBFZE = 0x0C81F,
	PPC_OP_SUBFZEO = 0x2C81F,
	PPC_OP_SYNC = 0x2561F,
	PPC_OP_TD = 0x0441F,
	PPC_OP_TLBIA = 0x1721F,
	PPC_OP_TLBIE = 0x1321F,
	PPC_OP_TLBIEL = 0x1121F,
	PPC_OP_TLBSYNC = 0x2361F,
	PPC_OP_TW = 0x0041F,
	PPC_OP_XOR = 0x13C1F,

	/* Opcode 58 sub operations */
	PPC_OP_LD = 0x003A,
	PPC_OP_LDU = 0x013A,
	PPC_OP_LWA = 0x023A,

	/* Opcode 59 sub operations */
	PPC_OP_FADDS = 0x0153B,
	PPC_OP_FDIVS = 0x0123B,
	PPC_OP_FMADDS = 0x01D3B,
	PPC_OP_FMSUBS = 0x01C3B,
	PPC_OP_FMULS = 0x0193B,
	PPC_OP_FNMADDS = 0x01F3B,
	PPC_OP_FNMSUBS = 0x01E3B,
	PPC_OP_FRES = 0x0183B,
	PPC_OP_FSQRTS = 0x0223B,
	PPC_OP_FSUBS = 0x0143B,

	/* Opcode 62 sub operations */
	PPC_OP_STD = 0x003E,
	PPC_OP_STDU = 0x013E,

	/* Opcode 63 sub operations */
	PPC_OP_FABS = 0x1083F,
	PPC_OP_FADD = 0x0153F,
	PPC_OP_FCFID = 0x34E3F,
	PPC_OP_FCMPO = 0x0203F,
	PPC_OP_FCMPU = 0x0003F,
	PPC_OP_FCTID = 0x32E3F,
	PPC_OP_FCTIDZ = 0x32F3F,
	PPC_OP_FCTIW = 0x00E3F,
	PPC_OP_FCTIWZ = 0x00F3F,
	PPC_OP_FDIV = 0x0123F,
	PPC_OP_FMADD = 0x01D3F,
	PPC_OP_FMR = 0x0483F,
	PPC_OP_FMSUB = 0x01C3F,
	PPC_OP_FMUL = 0x0193F,
	PPC_OP_FNABS = 0x0883F,
	PPC_OP_FNEG = 0x0283F,
	PPC_OP_FNMADD = 0x01F3F,
	PPC_OP_FNMSUB = 0x01E3F,
	PPC_OP_FRSP = 0x0123F,
	PPC_OP_FRSQRTE = 0x01A3F,
	PPC_OP_FSEL = 0x0173F,
	PPC_OP_FSQRT = 0x0223F,
	PPC_OP_FSUB = 0x0143F,
	PPC_OP_MCRFS = 0x0403F,
	PPC_OP_MFFS = 0x2473F,
	PPC_OP_MTFSB0 = 0x0463F,
	PPC_OP_MTFSB1 = 0x0263F,
	PPC_OP_MTFSF = 0x2C73F,
	PPC_OP_MTFSFI = 0x0863F,

};

typedef void (*handler)(void *param);

class XenonParser
{
public:
	DLLPREFIX XenonParser();
	DLLPREFIX XenonParser(void *p);
	DLLPREFIX XenonParser(const XenonParser &copy, void *p);
	DLLPREFIX ~XenonParser();

	DLLPREFIX void SetParam(void *p);
	DLLPREFIX void CopyTables(const XenonParser &copy);
	DLLPREFIX void Register(Mnemonics Instr, handler Handler);
	DLLPREFIX void Parse(u32 instruction);

	void NormalOp(void *param);

	void Op19(void *param);
	void Op30(void *param);
	void Op31(void *param);
	void Op58(void *param);
	void Op59(void *param);
	void Op62(void *param);
	void Op63(void *param);

private:
	void InitTables();

	handler *NormalOps;
	handler *Sub19;
	handler *Sub30;
	handler *Sub31;
	handler *Sub58;
	handler *Sub59;
	handler *Sub62;
	handler *Sub63;

	void *param;
	u32 curInstr;
	bool IsOwner;
};

typedef void (XenonParser::*InternalOp)(void *param);

#undef DLLPREFIX
